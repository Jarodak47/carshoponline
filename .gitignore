# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/client/node_modules
/node_modules
/client/.pnp
/client/.pnp.js
/client/.env
# testing
/client/coverage

# production
/client/build

# misc
/client/.DS_Store
/client/.env.local
/client/.env.development.local
/client/.env.test.local
/client/.env.production.local

/client/npm-debug.log*
/client/yarn-debug.log*
/client/yarn-error.log*

# misc
.DS_Store

# Created by https://www.toptal.com/developers/gitignore/api/python,pycharm,visualstudiocode
# Edit at https://www.toptal.com/developers/gitignore?templates=python,pycharm,visualstudiocode

### PyCharm ###
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff
/backend/.idea/**
/backend/.idea/**/workspace.xml
/backend/.idea/**/tasks.xml
/backend/.idea/**/usage.statistics.xml
/backend/.idea/**/dictionaries
/backend/.idea/**/shelf

# AWS User-specific
/backend/.idea/**/aws.xml

# Generated files
/backend/.idea/**/contentModel.xml

# Sensitive or high-churn files
/backend/.idea/**/dataSources/
/backend/.idea/**/dataSources.ids
/backend/.idea/**/dataSources.local.xml
/backend/.idea/**/sqlDataSources.xml
/backend/.idea/**/dynamic.xml
/backend/.idea/**/uiDesigner.xml
/backend/.idea/**/dbnavigator.xml

# Gradle
/backend/.idea/**/gradle.xml
/backend/.idea/**/libraries

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/artifacts
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .idea/*.iml
# .idea/modules
# *.iml
# *.ipr

# CMake
/backend/cmake-build-*/

# Mongo Explorer plugin
/backend/.idea/**/mongoSettings.xml

# File-based project format
/backend/*.iws

# IntelliJ
/backend/out/

# mpeltonen/sbt-idea plugin
/backend/.idea_modules/

# JIRA plugin
/backend/atlassian-ide-plugin.xml

# Cursive Clojure plugin
/backend/.idea/replstate.xml

# SonarLint plugin
/backend/.idea/sonarlint/

# Crashlytics plugin (for Android Studio and IntelliJ)
/backend/com_crashlytics_export_strings.xml
/backend/crashlytics.properties
/backend/crashlytics-build.properties
/backend/fabric.properties

# Editor-based Rest Client
/backend/.idea/httpRequests

# Android studio 3.1+ serialized cache file
/backend/.idea/caches/build_file_checksums.ser

### PyCharm Patch ###
# Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721

# *.iml
# modules.xml
# .idea/misc.xml
# *.ipr

# Sonarlint plugin
# https://plugins.jetbrains.com/plugin/7973-sonarlint
/backend/.idea/**/sonarlint/

# SonarQube Plugin
# https://plugins.jetbrains.com/plugin/7238-sonarqube-community-plugin
/backend/.idea/**/sonarIssues.xml

# Markdown Navigator plugin
# https://plugins.jetbrains.com/plugin/7896-markdown-navigator-enhanced
/backend/.idea/**/markdown-navigator.xml
/backend/.idea/**/markdown-navigator-enh.xml
/backend/.idea/**/markdown-navigator/

# Cache file creation bug
# See https://youtrack.jetbrains.com/issue/JBR-2257
/backend/.idea/$CACHE_FILE$

# CodeStream plugin
# https://plugins.jetbrains.com/plugin/12206-codestream
/backend/.idea/codestream.xml

# Azure Toolkit for IntelliJ plugin
# https://plugins.jetbrains.com/plugin/8053-azure-toolkit-for-intellij
/backend/.idea/**/azureSettings.xml

### Python ###
# Byte-compiled / optimized / DLL files
/backend/__pycache__/
/backend/*.py[cod]
/backend/*$py.class

# C extensions
/backend/*.so

# Distribution / packaging
/backend/.Python
/backend/build/
/backend/develop-eggs/
/backend/dist/
/backend/downloads/
/backend/eggs/
/backend/.eggs/
/backend/lib/
/backend/lib64/
/backend/parts/
/backend/sdist/
banckend/uploads/
banckend/var/
banckend/wheels/
banckend/share/python-wheels/
banckend/*.egg-info/
banckend/.installed.cfg
banckend/*.egg
banckend/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
banckend/*.manifest
banckend/*.spec

# Installer logs
banckend/pip-log.txt
banckend/pip-delete-this-directory.txt

# Unit test / coverage reports
banckend/htmlcov/
banckend/.tox/
banckend/.nox/
banckend/.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
banckend/.pybuilder/
banckend/target/

# Jupyter Notebook
banckend/.ipynb_checkpoints

# IPython
banckend/profile_default/
banckend/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
banckend/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
banckend/__pypackages__/

# Celery stuff
banckend/celerybeat-schedule
banckend/celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
banckend/.env
banckend/.venv
banckend/venv
banckend/env/
banckend/venv/
banckend/ENV/
banckend/env.bak/
banckend/venv.bak/

# Spyder project settings
banckend/.spyderproject
banckend/.spyproject

# Rope project settings
banckend/.ropeproject

# mkdocs documentation
/site

# mypy
banckend/.mypy_cache/
banckend/.dmypy.json
banckend/dmypy.json

# Pyre type checker
banckend/.pyre/

# pytype static type analyzer
banckend/.pytype/

# Cython debug symbols
banckend/cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

### Python Patch ###
# Poetry local configuration file - https://python-poetry.org/docs/configuration/#local-configuration
banckend/backend/poetry.toml

# ruff
banckend/.ruff_cache/

# LSP config files
banckend/backend/pyrightconfig.json

### VisualStudioCode ###
banckend/.vscode/*
banckend/!.vscode/settings.json
banckend/!.vscode/tasks.json
banckend/!.vscode/launch.json
banckend/!.vscode/extensions.json
banckend/!.vscode/*.code-snippets

# Local History for Visual Studio Code
banckend/.history/
banckend/**/.DS_Store

# Built Visual Studio Code Extensions
banckend/*.vsix

### VisualStudioCode Patch ###
# Ignore all local history of files
banckend/.history
banckend/.ionide

# End of https://www.toptal.com/developers/gitignore/api/python,pycharm,visualstudiocode

banckend/jobs.sqlite